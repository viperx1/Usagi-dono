name: Windows Build & Release (Qt 6.9.2 LLVM MinGW)

on:
  push:
    branches:
      - master
      - dev
    tags:
      - 'v*.*.*'
      - 'v*.*.*-beta*'

jobs:
  build-llvm-mingw:
    runs-on: windows-latest
    name: Build with LLVM/Clang (Qt 6.9.2 MinGW)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Qt 6.9.2 (LLVM MinGW)
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.9.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_llvm_mingw'
          cache: true

      - name: Download LLVM-MinGW
        run: |
          Invoke-WebRequest -Uri "https://github.com/mstorsjo/llvm-mingw/releases/download/20251007/llvm-mingw-20251007-ucrt-x86_64.zip" -OutFile "C:\llvm-mingw.zip"
          Expand-Archive -Path "C:\llvm-mingw.zip" -DestinationPath "C:\llvm-mingw"
        shell: powershell

      - name: Add LLVM-MinGW to PATH
        run: |
          echo "C:\llvm-mingw\bin" >> $GITHUB_PATH
        shell: powershell

      - name: Configure (CMake)
        shell: bash
        run: |
          cmake -S . -B build -G "Ninja" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER="clang.exe" \
            -DCMAKE_CXX_COMPILER="clang++.exe" \
            -DCMAKE_C_COMPILER_TARGET=x86_64-w64-mingw32 \
            -DCMAKE_CXX_COMPILER_TARGET=x86_64-w64-mingw32 \
            -DCMAKE_C_COMPILER_FRONTEND_VARIANT=GNU \
            -DCMAKE_CXX_COMPILER_FRONTEND_VARIANT=GNU \
            -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld" \
            -DCMAKE_SHARED_LINKER_FLAGS="-fuse-ld=lld" \
            -DCMAKE_PREFIX_PATH="D:/a/Usagi-dono/Qt/6.9.2/llvm-mingw_64/lib/cmake" \
            2>&1 | tee build_log.txt

      - name: Build
        run: cmake --build build --config Release 2>&1 | tee -a build_log.txt
        shell: bash

      - name: Run tests
        run: ctest --output-on-failure --test-dir build 2>&1 | tee -a build_log.txt
        shell: bash


      - name: Upload build artifact (Alpha, LLVM)
        if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')
        uses: actions/upload-artifact@v4
        with:
          name: Usagi-dono-alpha-llvm
          path: |
            build/**/*.exe

      - name: Create Release & Upload (Stable/Beta, LLVM)
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/*.exe

      - name: Create issue with logs on failure
        if: failure()
        shell: bash
        run: |
          echo "ðŸš¨ **Build failed for workflow:** ${{ github.workflow }}" > issue_body.md
          echo "" >> issue_body.md
          echo "**Branch/Tag:** ${{ github.ref }}" >> issue_body.md
          echo "**Commit:** ${{ github.sha }}" >> issue_body.md
          echo "" >> issue_body.md
          echo "### Configure log" >> issue_body.md
          echo '```' >> issue_body.md
          tail -n 200 build/configure_log.txt >> issue_body.md
          echo '```' >> issue_body.md
          echo "### Build log" >> issue_body.md
          echo '```' >> issue_body.md
          tail -n 200 build/build_log.txt >> issue_body.md
          echo '```' >> issue_body.md
          echo "### Test log" >> issue_body.md
          echo '```' >> issue_body.md
          tail -n 200 build/test_log.txt >> issue_body.md
          echo '```' >> issue_body.md

          gh issue create \
            --title "ðŸš¨ Build failed: ${{ github.workflow }} on ${{ github.ref }}" \
            --body-file issue_body.md \
            --label ci-failure,bug
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
